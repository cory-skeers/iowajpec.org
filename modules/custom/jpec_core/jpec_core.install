<?php

/**
 * @file
 * Install, update and uninstall functions for the tippie_core module.
 */

function jpec_core_install() {
  variable_set('site_name', 'John Pappajohn Entrepreneurial Center');
  variable_set('user_pictures', 0);

  db_update('block')
    ->fields(array(
      'status' => 0,
      'region' => '-1',
    ))
    ->condition(db_or()
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'navigation')
      )
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'management')
      )
      ->condition(db_and()
        ->condition('module', 'user')
        ->condition('delta', 'login')
      )
    )
    ->execute();
}

/**
 * Set site name and disable user pictures.
 */
function jpec_core_update_7001() {
  variable_set('site_name', 'John Pappajohn Entrepreneurial Center');
  variable_set('user_pictures', 0);
}

/**
 * Disable default blocks.
 */
function jpec_core_update_7002() {
  db_update('block')
    ->fields(array(
      'status' => 0,
      'region' => '-1',
    ))
    ->condition(db_or()
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'navigation')
      )
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'management')
      )
      ->condition(db_and()
        ->condition('module', 'user')
        ->condition('delta', 'login')
      )
    )
    ->execute();

      // Turn off toolbar if it exists.
  if (module_exists('toolbar')) {
    module_disable(array('toolbar'));
    drupal_uninstall_modules(array('toolbar'));
  }

  // Turn off admin_menu if it exists.
  if (module_exists('admin_menu')) {
    module_disable(array('admin_menu'));
    drupal_uninstall_modules(array('admin_menu'));
  }

  // Turn on navbar.
  if (!module_exists('navbar')) {
    module_enable(array('navbar'));
  }

  // Enable ember administration theme.
  theme_enable(array('adminimal'));

  // Disable seven and bartik since they are not needed.
  theme_disable(array('seven', 'bartik'));

  // Set admin theme to ember.
  variable_set('admin_theme', 'adminimal');

  drupal_flush_all_caches();
}

/**
 * Install jpec_editor
 */
function jpec_core_update_7003() {
  if (!module_exists('tippie_editor')) {
    module_enable(array('tippie_editor'));
  }
}

/**
 * Create a menu block.
 */
function jpec_core_update_7004() {
  if (!module_exists('menu_block')) {
    module_enable(array('menu_block'));
  }
}

/**
 * Disable default blocks, try 2.
 */
function jpec_core_update_7005() {
  db_update('block')
    ->fields(array(
      'status' => 0,
      'region' => '-1',
    ))
    ->condition(db_or()
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'navigation')
      )
      ->condition(db_and()
        ->condition('module', 'system')
        ->condition('delta', 'management')
      )
      ->condition(db_and()
        ->condition('module', 'user')
        ->condition('delta', 'login')
      )
    )
    ->execute();

      // Turn off toolbar if it exists.
  if (module_exists('toolbar')) {
    module_disable(array('toolbar'));
    drupal_uninstall_modules(array('toolbar'));
  }

  // Turn off admin_menu if it exists.
  if (module_exists('admin_menu')) {
    module_disable(array('admin_menu'));
    drupal_uninstall_modules(array('admin_menu'));
  }

  // Turn on navbar.
  if (!module_exists('navbar')) {
    module_enable(array('navbar'));
  }

  // Enable ember administration theme.
  theme_enable(array('adminimal'));

  // Disable seven and bartik since they are not needed.
  theme_disable(array('seven', 'bartik'));

  // Set admin theme to ember.
  variable_set('admin_theme', 'adminimal');

  drupal_flush_all_caches();
}

/**
 * Enable jpec_page and jpec_paragraphs feature
 */
function jpec_core_update_7006() {
  if (!module_exists('jpec_paragraphs')) {
    module_enable(array('jpec_paragraphs'));
  }

  if (!module_exists('jpec_page')) {
    module_enable(array('jpec_page'));
  }
}

/**
 * Move the section menu into content region.
 */

function jpec_core_update_7007() {

  if (module_exists('bootstrap_library')) {
    module_disable(array('bootstrap_library'));
    drupal_uninstall_modules(array('bootstrap_library'));
  }

  // Update the section block configuration.
  variable_set("menu_block_1_title_link", 0);
  variable_set("menu_block_1_level", '1');
  variable_set("menu_block_1_follow", 'child');

  // Update help block weight.
  db_update('block')
    ->fields(array(
      'weight' => '-11',
    ))
    ->condition(db_and()
      ->condition('theme', 'jpec')
      ->condition('module', 'system')
      ->condition('delta', 'help')
    )
    ->execute();

  db_update('block')
    ->fields(array(
      'status' => 1,
      'region' => 'content',
      'weight' => '-10',
    ))
    ->condition(db_and()
      ->condition('theme', 'jpec')
      ->condition('module', 'menu_block')
      ->condition('delta', '1')
    )
    ->execute();
}

/**
 * Hide section menu from the homepage.
 */

function jpec_core_update_7008() {
  db_update('block')
    ->fields(array(
      'pages' => '<front>',
    ))
    ->condition(db_and()
      ->condition('theme', 'jpec')
      ->condition('module', 'menu_block')
      ->condition('delta', '1')
    )
    ->execute();
}

/**
 * Section menu modifications.
 */
function jpec_core_update_7009() {

  // Update the section block configuration.
  variable_set("menu_block_1_admin_title", 'Section Menu');
  variable_set("menu_block_1_depth", 0);
  variable_set("menu_block_1_follow", 0);
  variable_set("menu_block_1_sort", 1);
}

/**
 * Enable jquery_update and admin_views modules
 */
function jpec_core_update_7010() {
  if (!module_exists('jquery_update')) {
    module_enable(array('jquery_update'));
  }

  if (!module_exists('admin_views')) {
    module_enable(array('admin_views'));
  }
}

/**
 * Enable jpec_roles feature
 */
function jpec_core_update_7011() {
  if (!module_exists('jpec_roles')) {
    module_enable(array('jpec_roles'));
  }
}

/**
 * Enable auto_entitylabel module
 */
function jpec_core_update_7012() {
  if (!module_exists('auto_entitylabel')) {
    module_enable(array('auto_entitylabel'));
  }
}

/**
 * Allow images to be categorized in the media library.
 */
function jpec_core_update_7013() {
  if (!module_exists('transliteration')) {
    module_enable(array('transliteration'));
  }

  if (!module_exists('media_browser_plus')) {
    module_enable(array('media_browser_plus'));
  }

  // Create the initial media folders.
  $new_terms = array(
    'Documents',
    'Images',
    '2x2',
    'Cards',
    'Directory',
    'Factoids',
    'Headers',
    'Short',
    'Tall',
    'News'
  );

  // Load the media_folders vocabulary ID.
  $vid = taxonomy_vocabulary_machine_name_load('media_folders')->vid;

  // Create new terms from the $new_terms array.
  foreach ($new_terms as $item) {
    $new_term = new stdClass();
    $new_term->name = $item;
    $new_term->vid = $vid;

    $parent = '';

    switch ($item) {
      case 'Headers':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;

      case 'Short':
        $parent = taxonomy_get_term_by_name('Headers', 'media_folders');
        break;

      case 'Tall':
        $parent = taxonomy_get_term_by_name('Headers', 'media_folders');
        break;

      case 'News':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;

      case '2x2':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;

      case 'Factoids':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;

      case 'Directory':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;

      case 'Cards':
        $parent = taxonomy_get_term_by_name('Images', 'media_folders');
        break;                

      default:
        break;
    }

    if (!empty($parent)) {
      $tid = array_pop($parent)->tid;
      $new_term->parent = $tid;
    }

    taxonomy_term_save($new_term);
  }

  // A list of views to disable.
  $viewnames = array(
    'media_default',
    'media_browser_plus',
  );

  // Grab list of views that are already disabled.
  $views_status = variable_get('views_defaults', array());

  // Add our views to be disabled to the list.
  foreach ($viewnames as $key => $viewname) {
    $views_status[$viewname] = TRUE;
  }

  // Reset the variable with the new list.
  variable_set('views_defaults', $views_status);

  // Empty cache now.
  if (function_exists('views_invalidate_cache')) {
    views_invalidate_cache();
  }
}

/**
 * Enable jpec_factoid feature
 */
function jpec_core_update_7014() {
  if (!module_exists('jpec_factoid')) {
    module_enable(array('jpec_factoid'));
  }
}

/**
 * Enable jpec_story feature
 */
function jpec_core_update_7015() {
  if (!module_exists('jpec_story')) {
    module_enable(array('jpec_story'));
  }
}

/**
 * Enable better_formats module
 */
function jpec_core_update_7016() {
  if (!module_exists('better_formats')) {
    module_enable(array('better_formats'));
  }
}

/**
 * Enable jpec_person feature
 */
function jpec_core_update_7017() {
  if (!module_exists('jpec_person')) {
    module_enable(array('jpec_person'));
  }
}

/**
 * Create and configure Section Menu
 */
function jpec_core_update_7019() {
// Determine the delta of the new block.
  $block_ids = variable_get('menu_block_ids', array());
  $delta = empty($block_ids) ? 1 : max($block_ids) + 1;
  $form_state['values']['delta'] = $delta;

  // Save the delta so we can get this block later.
  variable_set('jpec_core_sidebar_menu_delta', $delta);

  // Save the new array of blocks IDs.
  $block_ids[] = $delta;
  variable_set('menu_block_ids', $block_ids);

  // Save the block configuration.
  variable_set("menu_block_{$delta}_title_link", 0);
  variable_set("menu_block_{$delta}_admin_title", 'Section menu');
  variable_set("menu_block_{$delta}_parent", 'main-menu:0');
  variable_set("menu_block_{$delta}_level", '1');
  variable_set("menu_block_{$delta}_follow", '0');
  variable_set("menu_block_{$delta}_depth", '0');
  variable_set("menu_block_{$delta}_depth_relative", 1);
  variable_set("menu_block_{$delta}_expanded", 0);
  variable_set("menu_block_{$delta}_sort", 0);

  // Run the normal new block submission.
  $query = db_insert('block')->fields(array('visibility', 'pages', 'custom', 'title', 'module', 'theme', 'region', 'status', 'weight', 'delta', 'cache'));
  foreach (list_themes() as $key => $theme) {
    if ($theme->status) {
      $query->values(array(
        'visibility' => 0,
        'pages' => '',
        'custom' => 0,
        'title' => '',
        'module' => 'menu_block',
        'theme' => 'JPEC',
        'region' => 'content',
        'status' => 1,
        'weight' => '-10',
        'delta' => $delta,
        'cache' => DRUPAL_NO_CACHE,
      ));
    }
  }
  $query->execute();
}

/**
 * Enable custom_breadcrumbs module
 */
function jpec_core_update_7020() {
  if (!module_exists('custom_breadcrumbs')) {
    module_enable(array('custom_breadcrumbs'));
  }
}

/**
 * Enable jpec_news and jpec_news_views features
 */
function jpec_core_update_7021() {
  if (!module_exists('jpec_news')) {
    module_enable(array('jpec_news'));
  }
  if (!module_exists('jpec_news_views')) {
    module_enable(array('jpec_news_views'));
  }  
}

/**
 * Enable date, date_popup, rrssb, viewfield modules
 */
function jpec_core_update_7022() {
  if (!module_exists('date')) {
    module_enable(array('date'));
  }
  if (!module_exists('date_popup')) {
    module_enable(array('date_popup'));
  } 
  if (!module_exists('rrssb')) {
    module_enable(array('rrssb'));
  }
  if (!module_exists('viewfield')) {
    module_enable(array('viewfield'));
  } 
}

/**
 * Disable wysiwyg module
 */
function jpec_core_update_7023() {
  // Turn off admin_menu if it exists.
  if (module_exists('wysiwyg')) {
    module_disable(array('wysiwyg'));
    drupal_uninstall_modules(array('wysiwyg'));
  }
}

/**
 * Enable jpec_events feature
 */
function jpec_core_update_7024() {
  if (!module_exists('jpec_events')) {
    module_enable(array('jpec_events'));
  }
}

/**
 * Enable jpec_event_views feature
 */
function jpec_core_update_7025() {
  if (!module_exists('jpec_event_views')) {
    module_enable(array('jpec_event_views'));
  }
}

/**
 * Enable timefield module
 */
function jpec_core_update_7026() {
  if (!module_exists('timefield')) {
    module_enable(array('timefield'));
  }
}

/**
 * Enable jpec_webform feature
 */
function jpec_core_update_7027() {
  if (!module_exists('jpec_webform')) {
    module_enable(array('jpec_webform'));
  }
}